{"version":3,"sources":["components/Loading.js","components/Country.js","App.js","index.js"],"names":["Loading","className","Country","results","getCountry","lands","map","obj","i","console","log","name","region","flag","capital","population","subregion","area","timezones","borders","border","onClick","src","alt","Fragment","App","useState","userInput","setUserInput","setResults","loading","setLoading","useEffect","setTimeout","status","countryName","textToUrl","encodeURIComponent","endPoint","axios","then","data","catch","err","onSubmit","e","preventDefault","type","value","onChange","target","placeholder","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAUeA,EARC,WACd,OACE,sBAAKC,UAAU,UAAf,UACE,wCACA,oBAAIA,UAAU,cAAd,6B,yBCqCSC,EAzCC,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WACpBC,EAAQF,EAAQG,KAAI,SAACC,EAAKC,GAC9BC,QAAQC,IAAIH,GACZ,IACEI,EASEJ,EATFI,KACAC,EAQEL,EARFK,OACAC,EAOEN,EAPFM,KACAC,EAMEP,EANFO,QACAC,EAKER,EALFQ,WACAC,EAIET,EAJFS,UACAC,EAGEV,EAHFU,KACAC,EAEEX,EAFFW,UACAC,EACEZ,EADFY,QAEF,OACE,sBAAalB,UAAU,SAAvB,cACG,6BAAKU,IACN,8BACGA,EADH,4BACkCC,EADlC,KAC4CI,EAD5C,uCAEuB,IACpBG,EAAQb,KAAI,SAACc,EAAQZ,GAAT,OACX,oBAEEP,UAAU,eACVoB,QAAS,kBAAMjB,EAAW,OAAQgB,IAHpC,sBAKgBA,IAJTZ,MALX,KAYI,uBACDG,EAbH,sBAa4BG,EAb5B,oBAasDG,EAbtD,MAcE,oCAdF,uBAcmCN,EAdnC,OAc6CI,EAd7C,sBAeOJ,EAfP,OAeiBO,KAEjB,qBAAKI,IAAKT,EAAMU,IAAKZ,EAAMV,UAAU,SAnBvC,OAAUO,MAwBd,OAAO,cAAC,IAAMgB,SAAP,UAAiBnB,KCaXoB,MAhDf,WACE,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOvB,EAAP,KAAgB0B,EAAhB,KACA,EAA8BH,oBAAS,GAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KAEAC,qBAAU,WACRC,YAAW,WACTF,GAAW,GACXtB,QAAQC,IAAI,QACX,OACF,IAEH,IAAMN,EAAa,SAAC8B,EAAQC,GAC1B,IAAIC,EAAYC,mBAAmBF,GAC/BG,EAAQ,2CAAuCJ,EAAvC,YAAiDE,GAE7DG,IAAMD,GACHE,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcZ,EAAWY,MAC9BC,OAAM,SAACC,GAAD,OAASlC,QAAQC,IAAR,sBAA2BiC,QAW/C,OAAIb,EAAgB,cAAC,EAAD,IAElB,sBAAK7B,UAAU,YAAf,UACE,oBAAIA,UAAU,UAAd,oCACA,uBAAM2C,SAVV,SAAsBC,GACpBA,EAAEC,iBACF1C,EAAW,OAAQuB,GACnBC,EAAa,KAOX,UACE,uBACEmB,KAAK,OACLC,MAAOrB,EACPsB,SAjBR,SAAsBJ,GACpBjB,EAAaiB,EAAEK,OAAOF,QAiBhBG,YAAY,8BAGd,wBAAQJ,KAAK,SAAb,uBAEF,cAAC,EAAD,CAAS5C,QAASA,EAASC,WAAYA,QC5C7CgD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.633a5c4c.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Loading = () => {\n  return (\n    <div className=\"loading\">\n      <h1>‚è≥</h1>\n      <h1 className=\"loading-txt\">Loading ...</h1>\n    </div>\n  );\n};\nexport default Loading;\n","import React from \"react\";\n\nconst Country = ({ results, getCountry }) => {\n  const lands = results.map((obj, i) => {\n    console.log(obj);\n    const {\n      name,\n      region,\n      flag,\n      capital,\n      population,\n      subregion,\n      area,\n      timezones,\n      borders,\n    } = obj;\n    return (\n      <div key={i} className=\"result\">\n        `<h1>{name}</h1>\n        <p>\n          {name} is a country located in {region} ({subregion} subregion) and\n          shares borders with:{\" \"}\n          {borders.map((border, i) => (\n            <i\n              key={i}\n              className=\"country-link\"\n              onClick={() => getCountry(\"name\", border)}\n            >\n              &nbsp;&nbsp; {border}\n            </i>\n          ))}\n          . <br />\n          {name}'s capital city is {capital} and its area is {area} km\n          <sup>2</sup>. The population of {name} is {population}. The timezone\n          for {name} is {timezones}\n        </p>\n        <img src={flag} alt={name} className=\"flag\" /> `\n      </div>\n    );\n  });\n\n  return <React.Fragment>{lands}</React.Fragment>;\n};\nexport default Country;\n","import React, { useState, useEffect } from \"react\";\nimport Loading from \"./components/Loading\";\nimport \"./scss/main.scss\";\nimport axios from \"axios\";\nimport Country from \"./components/Country\";\n\nfunction App() {\n  const [userInput, setUserInput] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n      console.log(\"hi\");\n    }, 1000);\n  }, []);\n\n  const getCountry = (status, countryName) => {\n    let textToUrl = encodeURIComponent(countryName);\n    let endPoint = `https://restcountries.eu/rest/v2/${status}/${textToUrl}`;\n\n    axios(endPoint)\n      .then(({ data }) => setResults(data))\n      .catch((err) => console.log(`Your had an ${err}`));\n  };\n  function changeHandle(e) {\n    setUserInput(e.target.value);\n  }\n  function submitHandle(e) {\n    e.preventDefault();\n    getCountry(\"name\", userInput);\n    setUserInput(\"\");\n  }\n\n  if (loading) return <Loading />;\n  return (\n    <div className=\"app__main\">\n      <h1 className=\"heading\">Countries Database App</h1>\n      <form onSubmit={submitHandle}>\n        <input\n          type=\"text\"\n          value={userInput}\n          onChange={changeHandle}\n          placeholder=\"Please enter country name\"\n        />\n\n        <button type=\"submit\">Search</button>\n      </form>\n      <Country results={results} getCountry={getCountry} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}