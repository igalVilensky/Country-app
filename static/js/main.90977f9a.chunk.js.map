{"version":3,"sources":["components/Loading.js","components/Country.js","App.js","index.js"],"names":["Loading","className","Country","results","lands","getCountry","map","items","i","console","log","region","name","capital","population","area","subregion","timezones","borders","flag","common","Fragment","App","useState","userInput","setUserInput","setResults","loading","setLoading","useEffect","setTimeout","status","countryName","textToUrl","encodeURIComponent","endPoint","axios","then","data","catch","err","onSubmit","e","preventDefault","type","value","onChange","target","placeholder","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAUeA,EARC,WACd,OACE,sBAAKC,UAAU,UAAf,UACE,wCACA,oBAAIA,UAAU,cAAd,6B,yBCkDSC,EAtDC,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,QACXC,GADqC,EAAjBC,WACZF,EAAQG,KAAI,SAACC,EAAOC,GAGhCC,QAAQC,IAAIH,GACZ,IACEI,EASEJ,EATFI,OACAC,EAQEL,EARFK,KACAC,EAOEN,EAPFM,QACAC,EAMEP,EANFO,WAEAC,GAIER,EALFS,UAKET,EAJFQ,MACAE,EAGEV,EAHFU,UACAC,EAEEX,EAFFW,QAEEX,EADFY,KAGF,OACE,sBAAKlB,UAAU,eAAf,UACE,8BACE,+BAAKW,EAAKQ,OAAV,kBAEF,sBAAKnB,UAAU,aAAf,UACE,qBAAKA,UAAU,iBAAf,iCACA,qBAAKA,UAAU,YAAf,SAA4BU,OAE9B,sBAAKV,UAAU,aAAf,UACE,qBAAKA,UAAU,iBAAf,wBACA,sBAAKA,UAAU,YAAf,UACGc,EADH,OACY,0CAGd,sBAAKd,UAAU,aAAf,UACE,qBAAKA,UAAU,iBAAf,8BACA,qBAAKA,UAAU,YAAf,SAA4BiB,OAE9B,sBAAKjB,UAAU,aAAf,UACE,qBAAKA,UAAU,iBAAf,uBACA,qBAAKA,UAAU,YAAf,SAA4BgB,EAAU,QAExC,sBAAKhB,UAAU,aAAf,UACE,qBAAKA,UAAU,iBAAf,0BACA,qBAAKA,UAAU,YAAf,SAA4BY,EAAQ,QAEtC,sBAAKZ,UAAU,aAAf,UACE,qBAAKA,UAAU,iBAAf,wBACA,qBAAKA,UAAU,YAAf,SAA4Ba,SA5BGN,OAkCvC,OAAO,cAAC,IAAMa,SAAP,UAAiBjB,KCEXkB,MAlDf,WACE,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOpB,EAAP,KAAgBuB,EAAhB,KACA,EAA8BH,oBAAS,GAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KAEAC,qBAAU,WACRC,YAAW,WACTF,GAAW,KACV,OACF,IAEH,IAAMvB,EAAa,SAAC0B,EAAQC,GAC1B,IAAIC,EAAYC,mBAAmBF,GAC/BG,EAAQ,yCAAqCJ,EAArC,YAA+CE,GAC3DxB,QAAQC,IAAIyB,GAEZC,IAAMD,GACHE,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcZ,EAAWY,MAE9BC,OAAM,SAACC,GAAD,OAAS/B,QAAQC,IAAR,sBAA2B8B,QAY/C,OAVA/B,QAAQC,IAAIP,GAURwB,EAAgB,cAAC,EAAD,IAElB,sBAAK1B,UAAU,YAAf,UACE,oBAAIA,UAAU,UAAd,oCACA,uBAAMwC,SAVV,SAAsBC,GACpBA,EAAEC,iBACFtC,EAAW,OAAQmB,GACnBC,EAAa,KAOX,UACE,uBACEmB,KAAK,OACLC,MAAOrB,EACPsB,SAjBR,SAAsBJ,GACpBjB,EAAaiB,EAAEK,OAAOF,QAiBhBG,YAAY,8BAGd,wBAAQJ,KAAK,SAAb,uBAEF,cAAC,EAAD,CAASzC,QAASA,EAASE,WAAYA,QC9C7C4C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.90977f9a.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Loading = () => {\n  return (\n    <div className=\"loading\">\n      <h1>‚è≥</h1>\n      <h1 className=\"loading-txt\">Loading ...</h1>\n    </div>\n  );\n};\nexport default Loading;\n","import React from \"react\";\n\nconst Country = ({ results, getCountry }) => {\n  const lands = results.map((items, i) => {\n    /*     console.log(results, \"results\");\n     */ // console.log(getCountry, \"getCountry\");\n    console.log(items);\n    const {\n      region,\n      name,\n      capital,\n      population,\n      subregion,\n      area,\n      timezones,\n      borders,\n      flag,\n    } = items;\n\n    return (\n      <div className=\"result-table\" key={i}>\n        <div>\n          <h1>{name.common} Geography</h1>\n        </div>\n        <div className=\"result-row\">\n          <div className=\"inner-row-left\">Geographic Location</div>\n          <div className=\"inner-row\">{region}</div>\n        </div>\n        <div className=\"result-row\">\n          <div className=\"inner-row-left\">Total Area</div>\n          <div className=\"inner-row\">\n            {area} km <sup>2</sup>\n          </div>\n        </div>\n        <div className=\"result-row\">\n          <div className=\"inner-row-left\">Border Countries</div>\n          <div className=\"inner-row\">{borders}</div>\n        </div>\n        <div className=\"result-row\">\n          <div className=\"inner-row-left\">Time Zone</div>\n          <div className=\"inner-row\">{timezones[0]}</div>\n        </div>\n        <div className=\"result-row\">\n          <div className=\"inner-row-left\">Capital City</div>\n          <div className=\"inner-row\">{capital[0]}</div>\n        </div>\n        <div className=\"result-row\">\n          <div className=\"inner-row-left\">Population</div>\n          <div className=\"inner-row\">{population}</div>\n        </div>\n      </div>\n    );\n  });\n\n  return <React.Fragment>{lands}</React.Fragment>;\n};\nexport default Country;\n\n// <div key={i} className=\"result\">\n//   <h1>{name.common} </h1>\n//   <p className=\"text\">\n//     {name.common} is a country located in {region} and {subregion}{\" \"}\n//     subregion and shares borders with{borders ? \":\" : \"\"}\n//     {borders\n//       ? borders.map((border, i) => (\n//           <i\n//             key={i}\n//             className=\"country-link\"\n//             onClick={() => getCountry(\"name\", border)}\n//           >\n//             &nbsp;&nbsp; {`${border}`}\n//           </i>\n//         ))\n//       : \" no other country.\"}\n//     <br />\n//     {name.common}'s capital city is {capital[0]} and its area is {area} km\n//     <sup>2</sup>. The population of {name.common} is {population}. The\n//     timezone for {name.common} is {timezones[0]}\n//   </p>\n//   {/* <img src={flag} alt={name.common} className=\"flag\" />  */}\n//   <div className=\"flag\">{flag}</div>\n// </div>\n","import React, { useState, useEffect } from \"react\";\nimport Loading from \"./components/Loading\";\nimport \"./scss/main.scss\";\nimport axios from \"axios\";\nimport Country from \"./components/Country\";\n\nfunction App() {\n  const [userInput, setUserInput] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n  }, []);\n\n  const getCountry = (status, countryName) => {\n    let textToUrl = encodeURIComponent(countryName);\n    let endPoint = `https://restcountries.com/v3.1/${status}/${textToUrl}`;\n    console.log(endPoint);\n    // let endPoint = \"https://restcountries.com/v3.1/all\";\n    axios(endPoint)\n      .then(({ data }) => setResults(data))\n\n      .catch((err) => console.log(`Your had an ${err}`));\n  };\n  console.log(results);\n  function changeHandle(e) {\n    setUserInput(e.target.value);\n  }\n  function submitHandle(e) {\n    e.preventDefault();\n    getCountry(\"name\", userInput);\n    setUserInput(\"\");\n  }\n\n  if (loading) return <Loading />;\n  return (\n    <div className=\"app__main\">\n      <h1 className=\"heading\">Countries Database App</h1>\n      <form onSubmit={submitHandle}>\n        <input\n          type=\"text\"\n          value={userInput}\n          onChange={changeHandle}\n          placeholder=\"Please enter country name\"\n        />\n\n        <button type=\"submit\">Search</button>\n      </form>\n      <Country results={results} getCountry={getCountry} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}